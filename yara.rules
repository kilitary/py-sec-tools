//include "peid.rules"

import "pe"
import "time"

rule gzip_embed
{
    meta:
        description = "gzip embedded"

    strings:
        $a = {1f 8b 08 00}

    condition:
        all of them
}

rule gzip_mult
{
    meta:
        description = "gzip multiple sections"

    strings:
        $a = {1f 8b 08 00}

    condition:
        #a > 1
}

rule chertokrypt
{
    meta:
        description = "4ertOcrypt"

    strings:
        $a = "4ertKcrypt"
        $b = "SGN"

    condition:
        all of them
}

rule upx
{
	meta:
		description = "upx packer"

	strings:
		$a = {?? 55 50 58 21}

	condition:
		$a at pe.entry_point
}

rule uac
{
	meta:
		description = "uac elevation (admin)"

	strings:
		$a = "level=\"highestAvailable\""

	condition:
		all of them
}


rule single_section
{
	meta:
		description = "single_section"
    condition:
        pe.number_of_sections == 1
}

rule control_panel_applet
{
	meta:
    	description = "control_panel_applet"
    condition:
        pe.exports("CPlApplet")
}

rule has_dll_characteristic
{
	meta:
    	description = "has_dll_characteristic"

    condition:
        pe.characteristics & pe.DLL
}

rule is_pe
{
	meta:
    	description = "is_pe"

    condition:
        pe.is_pe
}

rule invalid_checksum
{
	meta:
    	description = "invalid checksum"

    condition:
        pe.checksum != pe.calculate_checksum()
}

rule invalid_date
{
	meta:
    	description = "invalid date"

    condition:
      pe.timestamp < 631188601 or pe.timestamp >= time.now()
}

rule invalid_resource_date
{
	meta:
    	description = "invalid  resource date"

    condition:
      pe.resource_timestamp < 631188601 or pe.resource_timestamp >= time.now()
}


rule overlay_size
{
	meta:
		description = "has overlay size"
	condition:
		pe.overlay.size > 0
}

rule overlay_offset
{
	meta:
		description = "has overlay offset"

	condition:
		pe.overlay.offset != 0
}

rule has_authenticode_signs
{
	meta:
		description = "has authenticode signs"

	condition:
		pe.number_of_signatures > 0
}
